.TH ofp-pki 8 "May 2008" "OpenFlow" "OpenFlow Manual"

.SH NAME
ofp\-pki \- OpenFlow public key infrastructure management utility

.SH SYNOPSIS
\fBofp\-pki\fR [\fIOPTIONS\fR] \fICOMMAND\fR [\fIARGS\fR]
.sp
Commands with their arguments:
.br
\fBofp\-pki\fR \fBnew-pki\fR
.br
\fBofp\-pki\fR \fBreq\fR \fINAME\fR
.br
\fBofp\-pki\fR \fBsign\fR \fINAME\fR \fITYPE\fR
.br
\fBofp\-pki\fR \fBreq+sign\fR \fINAME\fR \fITYPE\fR
.br
\fBofp\-pki\fR \fBverify\fR \fINAME\fR \fITYPE\fR
.sp
The available options are:
.br
[\fB-d\fR \fIDIR\fR | \fB--dir=\fR\fIDIR\fR] [\fB-f\fR | \fB--force\fR] [\fB-b\fR | \fB--batch\fR] [\fB-l\fR \fIFILE\fR | \fB--log=\fIFILE\fR] [\fB-h\fR | \fB--help\fR]

.SH DESCRIPTION
The \fBofp-pki\fR program sets up and manages a public key
infrastructure for use with OpenFlow.  It is intended to be a simple
interface for organizations that do not have an established public key
infrastructure.  Other PKI tools can substitute for or supplement the
use of \fBofp-pki\fR.

\fBofp-pki\fR uses \fBopenssl\fR(1) for certificate management and key
generation.

The commands supported by \fBofp-pki\fR are:

.TP
\fBnew-pki\fR
Creates a new PKI directory (by default named \fBpki\fR) and populates
it with a pair of certificate authorities for controllers and
switches.

This command should ideally be run on a high-security machine separate
from any OpenFlow controller or switch, called the CA machine.  The
files \fBpki/controllerca/cacert.pem\fR and
\fBpki/switchca/cacert.pem\fR that it produces will need to be copied
over to the OpenFlow switches and controllers, respectively.  Their
contents may safely be made public.

Other files generated by \fBnew-pki\fR may remain on the CA machine.
The files \fBpki/controllerca/private/cakey.pem\fR and
\fBpki/switchca/private/cakey.pem\fR have particularly sensitive
contents that should not be exposed.

.TP
\fBofp\-pki\fR \fBreq\fR \fINAME\fR
Generates a new private key named \fINAME\fR\fB-privkey.pem\fR and
corresponding certificate request named \fINAME\fR\fB-req.pem\fR.
The private key can be intended for use by a switch or a controller.

This command should ideally be run on the switch or controller that
will use the private key to identify itself.  The file
\fINAME\fR\fB-req.pem\fR must be copied to the CA machine for signing
with the \fBsign\fR command (below).  

This command will output a fingerprint to stdout as its final step.
Write down the fingerprint and take it to the CA machine before
continuing with the \fBsign\fR step.

\fINAME\fR\fB-privkey.pem\fR has sensitive contents that should not be
exposed.  \fINAME\fR\fB-req.pem\fR may be safely made public.

.TP
\fBofp\-pki\fR \fBsign\fR \fINAME\fR \fITYPE\fR
Signs the certificate request named \fINAME\fR\fB-req.pem\fR that was
produced in the previous step, producing a certificate named
\fINAME\fR\fB-cert.pem\fR.  \fITYPE\fR, which must be \fBswitch\fR or
\fBcontroller\fR, indicates the use for which the key is being
certified.

This command must be run on the CA machine.

The command will output a fingerprint to stdout and request that you
verify that it is the same fingerprint output by the \fBreq\fR
command.  This ensures that the request being signed is the same one
produced by \fBreq\fR.

The file \fINAME\fR\fB-cert.pem\fR will need to be copied back to the
switch or controller for which it is intended.  Its contents may
safely be made public.

.TP
\fBofp\-pki\fR \fBreq+sign\fR \fINAME\fR \fITYPE\fR
Combines the \fBreq\fR and \fBsign\fR commands into a single step,
outputting all the files produced by each.  The
\fINAME\fR\fB-privkey.pem\fR and \fINAME\fR\fB-cert.pem\fR files must
be copied securely to the switch or controller.
\fINAME\fR\fB-privkey.pem\fR has sensitive contents and must not be
exposed in transit.  Afterward, it should be deleted from the CA
machine.

This combined method is, theoretically, less secure than the
individual steps performed separately on two different machines,
because there is additional potential for exposure of the private
key.  However, it is also more convenient.

.TP
\fBofp\-pki\fR \fBverify\fR \fINAME\fR \fITYPE\fR
Verifies that \fINAME\fR\fB-cert.pem\fR is a valid certificate for the
given \fITYPE\fR of use (either \fBswitch\fR or \fBcontroller\fR).  If
the certificate is valid for this use, it prints the message
``\fINAME\fR\fB-cert.pem\fR: OK''; otherwise, it prints an error
message.

.SH OPTIONS
.TP
[\fB-d\fR \fIDIR\fR | \fB--dir=\fR\fIDIR\fR]
Specifies the location of the PKI hierarchy to be used or created by
the command (default: \fBpki\fR under the current directory).  The
\fBreq\fR command does not need access to a PKI hierarchy.

.TP
[\fB-f\fR | \fB--force\fR]
By default, \fBofp-pki\fR will not overwrite existing files or
directories.  This option overrides this behavior.

.TP
[\fB-b\fR | \fB--batch\fR]
Suppresses the interactive verification of fingerprints that the
\fBsign\fR command by default requires.

.TP
[\fB-l\fR \fIFILE\fR | \fB--log=\fIFILE\fR]
Sets the log file to \fIFILE\fR (default: ofp-pki.log).

.TP
[\fB-h\fR | \fB--help\fR]
Prints a help usage message and exits.

.SH "SEE ALSO"

.BR dpctl (8),
.BR switch (8),
.BR secchan (8),
.BR controller (8)
