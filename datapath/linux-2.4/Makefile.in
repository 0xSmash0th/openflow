builddir = @abs_builddir@
srcdir = @abs_srcdir@
top_srcdir = @abs_top_srcdir@
KSRC = @KSRC24@
VMDIR = @VMDIR@
VERSION = @VERSION@

# The names vpath and VPATH are very special for GNU Make and Automake.
# The following odd construction works around these oddities, whereas
# the straightforward "VPATH = $(srcdir)/.." will not work.
v = $(srcdir)/..
VPATH = $(v)

include $(srcdir)/../Modules.mk
include $(srcdir)/Modules.mk

default:
distclean: clean
distdir: clean
install:
all: default
clean:
	rm -f $(all_objects) *_mod.o $(all_dummies)
	for d in $(all_objdirs); do		\
		while				\
			rmdir $$d 2> /dev/null;	\
		do				\
			d=`dirname $$d`;	\
		done;				\
	done

check: all

ifneq (,$(KSRC))
ifeq (/lib/modules/$(shell uname -r)/source, $(KSRC))
  KOBJ :=  /lib/modules/$(shell uname -r)/build
else
  KOBJ :=  $(KSRC)
endif

ifneq ($(shell grep -c 'PATCHLEVEL = 4' $(KSRC)/Makefile),1)
  $(error Linux kernel source in $(KSRC) not 2.4)
endif

VERSION_FILE := $(KOBJ)/include/linux/version.h
ifeq (,$(wildcard $(VERSION_FILE)))
  $(error Linux kernel source not configured - missing version.h)
endif

CONFIG_FILE  := $(KSRC)/include/linux/autoconf.h
ifeq (,$(wildcard $(CONFIG_FILE)))
  $(error Linux kernel source not configured - missing autoconf.h)
endif

K_SUBLEVEL := $(shell sed -n 's/SUBLEVEL = // p' $(KSRC)/Makefile)
ifeq ($(shell test $(K_SUBLEVEL) -le 20; echo $?), 0)
  # 2.4.20 and before require GCC 2.95.
  CC := gcc-2.95
else
  # Later 2.4 versions are more flexible.
  CC := gcc-3.4 gcc-3.3 gcc-2.95
endif
test_cc = $(shell $(cc) --version > /dev/null 2>&1 && echo $(cc))
CC := $(foreach cc, $(CC), $(test_cc))
CC := $(firstword $(CC))
ifeq (,$(CC))
  $(error Compiler not found)
endif

CFLAGS = -DVERSION=\"$(VERSION)\" -O2 -g
CFLAGS += -I $(srcdir)/.. -I $(builddir)/.. -I $(top_srcdir)/include
ifeq ($(ARCH),)
  ARCH := $(shell uname -m | sed 's/i.86/i386/')
endif
CFLAGS += -DLINUX -D__KERNEL__ -DMODULE -O2 -pipe -Wall
CFLAGS += -I$(srcdir)/compat-2.4/include-$(ARCH)
CFLAGS += -I$(srcdir)/compat-2.4/include
CFLAGS += -I$(srcdir)/compat-2.4
CFLAGS += -I$(KSRC)/include -I.
CFLAGS += -Wno-sign-compare -fno-strict-aliasing
CFLAGS += $(shell [ -f $(KSRC)/include/linux/modversions.h ] && \
            echo "-DMODVERSIONS -DEXPORT_SYMTAB \
                  -include $(KSRC)/include/linux/modversions.h")

$(all_objects): $(all_dummies)
$(all_dummies):
	mkdir -p $(@D)
	touch $@

default: $(patsubst %,%_mod.o,$(all_modules))

define module_template
$(1)_objects = $$(patsubst %.c,%.o,$($(1)_sources))
$($(1)_sources): $(headers)
$(1)_mod.o: $$($(1)_objects)
	$(LD) $(LDFLAGS) -r $$^ -o $$@
endef

$(foreach module,$(all_modules),$(eval $(call module_template,$(module))))
endif

# Much of the kernel build system in this file is derived from Intel's
# e1000 distribution, with the following license:

################################################################################
#
# Intel PRO/1000 Linux driver
# Copyright(c) 1999 - 2007 Intel Corporation.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms and conditions of the GNU General Public License,
# version 2, as published by the Free Software Foundation.
#
# This program is distributed in the hope it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
# more details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.
#
# The full GNU General Public License is included in this distribution in
# the file called "COPYING".
#
# Contact Information:
# Linux NICS <linux.nics@intel.com>
# e1000-devel Mailing List <e1000-devel@lists.sourceforge.net>
# Intel Corporation, 5200 N.E. Elam Young Parkway, Hillsboro, OR 97124-6497
#
################################################################################
