WIRESHARK_SRC_DIR = ../wireshark-1.0.0-includes

SRCS   = packet-openflow.c plugin.c
CC     = gcc
OBJS   = $(foreach src, $(SRCS), $(src:.c=.o))

PLUGIN_NAME = packet-openflow

# local installation path
LOCAL_PLUGIN_DIR  = /home/$(shell whoami)/.wireshark/plugins

# determine global installation path (use latest plugin version path)
GLOBAL_PLUGIN_DIR_PARTIAL=/usr/local/lib/wireshark/plugins
GLOBAL_PLUGIN_VER=$(shell ls $(GLOBAL_PLUGIN_DIR_PARTIAL) | sort --reverse | head -n 1)
GLOBAL_PLUGIN_DIR=$(GLOBAL_PLUGIN_DIR_PARTIAL)/$(GLOBAL_PLUGIN_VER)

# specify the port on which event capture packets will be destined
DISSECT_PORT = -DOPENFLOW_DST_TCP_PORT=975

OSTYPE = $(shell uname)
ifeq ($(OSTYPE),Linux)
ENDIAN=-D_LITTLE_ENDIAN_
endif
ifeq ($(OSTYPE),SunOS)
ENDIAN=-D_BIG_ENDIAN_
endif

INC_GLIB=/usr/include/glib-2.0 #/usr/pubsw/include/glib-2.0/
INC_OPENFLOW=../../../include

INC_DIRS   = -I. -I$(INC_GLIB) -I$(INC_OPENFLOW)
CFLAGS = $(INC_DIRS) -DHAVE_CONFIG_H -I$(WIRESHARK_SRC_DIR) -I/usr/local/include -I/usr/local/include -DINET6 -D_U_=__attribute__\(\(unused\)\) -Wall -Wpointer-arith -g -I/usr/local/include -DXTHREADS -D_REENTRANT -DXUSE_MTSAFE_API -pthread -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/X11R6/include -I/usr/include/atk-1.0 -I/usr/include/pango-1.0 -I/usr/include/freetype2 -I/usr/include/freetype2/config -I/usr/local/include/glib-2.0 -I/usr/lib/glib-2.0/include -fPIC -DPIC $(ENDIAN) $(DISSECT_PORT)

LDFLAGS = -Wl,--rpath -Wl,/usr/local/lib -Wl,--rpath -Wl,/usr/local/lib -L/usr/local/lib -L$(WIRESHARK_SRC_DIR)/epan -L. -lgmodule-2.0 -ldl -lglib-2.0  -pthread -Wl,--export-dynamic -Wl,-soname -Wl,$(PLUGIN_NAME).so

.PHONY: clean install

$(PLUGIN_NAME).so : $(OBJS) $(SRCS)
	$(CC) -shared $(OBJS) $(LDFLAGS) -o $@

install: $(PLUGIN_NAME).so
	@if [ `id -u` -eq 0 ]; then \
	  if [ -d "$(GLOBAL_PLUGIN_DIR)" ]; then \
	    target="$(GLOBAL_PLUGIN_DIR)/$<"; \
	    res="*** Installed plugin for ALL users ($$target)"; \
	  else \
	    echo "*** Error: global plugin directory $(GLOBAL_PLUGIN_DIR) does not exist"; \
	    exit 1; \
	  fi; \
	else \
	  mkdir -p "$(LOCAL_PLUGIN_DIR)/"; \
	  target="$(LOCAL_PLUGIN_DIR)/$<"; \
	  res="*** Installed plugin for user "`id | cut -d\( -f2 | cut -d\) -f1`" ($$target)"; \
	fi; \
	cp $< "$$target" && echo "" && echo "$$res"

plugin.c: moduleinfo.h Makefile.am Makefile.common
	$(MAKE) -f Makefile.am

%.o : %.c openflow.h
	$(CC) -c $(CFLAGS) $< -o $@

clean:
	rm -f $(PLUGIN) $(OBJS)
